#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'
export PATH=`npm bin`:$PATH
BOLD=$(tput bold)
END=$(tput sgr0)

function check {
    echo "${BOLD}$1${END}"
    bash -c "$1"
    echo "Good"
}

export -f check

function checkFlowDefs {
echo "${BOLD}Checking for missing @flow comments${END}"
HAVE_FLOW=true
for file in $( git ls-files '**/*.js' ); do
    if [ -e "$file" ] ; then
        read flowtype < "$file"
        if test "x$flowtype" = 'x/* flow:disable */'; then
            echo "Skipping disabled file $file" > /dev/null
        elif test "x$flowtype" != 'x/* @flow */'; then
            HAVE_FLOW=false
            cat << EOF
$file is not annotated for flowtype (must be the first line)! - got "$flowtype"
EOF
        fi
    fi
done

if ! $HAVE_FLOW ; then
    exit 1
fi
echo "Good"
}

export -f checkFlowDefs

function checkPackageVersions {
echo "${BOLD}Checking for '^' or '~' in package.json${END}"
grep '[\^\~]' package.json && exit 1
echo "Good"

echo "${BOLD}Checking for '^' or '~' in bower.json${END}"
grep '[\^\~]' bower.json && exit 1
echo "Good"
}

export -f checkPackageVersions

if which parallel > /dev/null ; then
    export SHELL=/bin/bash
    parallel ::: \
        checkFlowDefs \
        checkPackageVersions \
        'check "jsonlint package.json > /dev/null"' \
        'check "eslint src/ test/ fixtures/ webpack/"' \
        'check "sass-lint -v"' \
        'check "flow"' \

else
    (./node_modules/.bin/flow start &>/dev/null) & # Pre-start flow server

    checkFlowDefs
    checkPackageVersions

    check "jsonlint package.json > /dev/null"
    check "eslint src/ test/ fixtures/ webpack/"
    check "sass-lint -v"
    check "flow"
fi

