#!/usr/bin/env babel-node

const basename = require("path").basename;
const { readFileSync, writeFileSync } = require("fs");
const loader = require("svg-inline-loader");

const destDir = "./src/icons/"
const files = process.argv.slice(2, process.argv.length).sort();
const fileHeader = `/* @flow */
/* Generated by ./script/iconify */
/* eslint-disable max-len */
`
if (!files.length) {
    console.log(`Usage: ./script/iconify ../designs/icons/*`);
    process.exit(1);
}

function toClassName(source_path) {
    return titleize(basename(source_path).
        replace("askizzy-icon-", '').
        replace(/.svg$/, '')
    )
}

function titleize(name) {
    const upcaseGroup = (match, char) => char.toUpperCase();

    return name
        .replace(/^(.)/, upcaseGroup)
        .replace(/-(.)/g, upcaseGroup);
}

files.forEach((path) => {
    const className = toClassName(path)
    const outFile = `${destDir}/${className}.js`;
    const svgContent = loader
        .getExtractedSVG(readFileSync(path))
        .replace(/^<svg/, "<svg class='${this.classNames}'")
        .replace(/style="([^"]*)"/g, (match, styleBlock) => {
            const result = styleBlock
                .split(";")
                .map((style) =>
                    style.replace(
                        /^(.*):(.*)$/,
                        (match, key, value) => `${key}="${value}"`,
                    )
                )
                .join(" ");
            return result;
        }
        );

    writeFileSync(outFile, `${fileHeader}

import BaseIcon from "./BaseIcon";

export default class SvgIcon${className} extends BaseIcon {
    static defaultProps = {
        iconClass: "${className}Icon",
    }

    get svgContent(): string {
        return \`
            ${svgContent}
        \`;
    }
}
`, 'utf8');
});


const importStatements = files.map((file) =>
    `import SvgIcon${toClassName(file)} from \"./${toClassName(file)}\";`
).join("\n");
const exportStatements = files.map((file) =>
    `    ${toClassName(file)}: SvgIcon${toClassName(file)},`
).join("\n")

writeFileSync("src/icons/index.js", `${fileHeader}
${importStatements}

export default {
${exportStatements}
};
`, 'utf8');
