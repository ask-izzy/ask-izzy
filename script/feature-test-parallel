#!/usr/bin/env bash

# Enable strict mode
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

DEBUG=${DEBUG:-}

# Print commands
PS4='$ $0:$LINENO: '
[ -n "$DEBUG" ] && set -x

export PATH=$(npm bin):$PATH

export NODE_ENV=production
export PORT=8010
export INTERACTIVE_TIMEOUT="10000"

ISS_URL="http://localhost:5000/" ./script/test-setup

function runTest {
    JOB_NUM=$1
    let "JOB_SLOT = $JOB_NUM % $CONCURRENCY"
    let PORT=8010+$1*2
    let ISS_MOCK_PORT=8011+$1*2
    export ISS_URL="http://localhost:$ISS_MOCK_PORT"
    export ENVFILE_PATH="/static/env-test-$1.js"
    export MAPSFILE_PATH="/static/google-maps-api-test-$1.js"

    ./script/generate-env-vars > "public/$ENVFILE_PATH"


    export PORT
    export ISS_MOCK_PORT

    mocha \
        --require babel-core/register \
        --colors \
        --timeout "$INTERACTIVE_TIMEOUT" \
        --grep "$2" \
        test/yadda.js \

    sleep 1 # Avoid completely slamming the machine

}

export -f runTest

CONCURRENCY=10

if which sysctl > /dev/null ; then
    NCPU="$(sysctl -n hw.ncpu || echo 10)"
    let CONCURRENCY=2*$NCPU
fi

# google maps api is authed from :8010 to :8030
# and we use 2 ports per process, so CONCURRENCY
# higher than 10 will cause failed tests.
if [ "$CONCURRENCY" -gt "10" ] ; then
    CONCURRENCY=10
fi

export SHELL=/bin/bash
export CONCURRENCY

mocha \
    --require babel-core/register \
        test/yadda-list.js \
        | grep '^[^[:space:]]' \
        | parallel \
            -j "$CONCURRENCY" \
            runTest "{#}" "{1}"
